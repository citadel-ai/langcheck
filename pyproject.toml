[build-system]
requires      = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "langcheck"
version = "0.8.0.dev6"
description = "Simple, Pythonic building blocks to evaluate LLM-based applications"
readme = "README.md"
authors = [{ name = "Citadel AI", email = "info@citadel.co.jp" }]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
keywords = ["llm", "ai", "nlp", "evaluation", "validation", "testing"]
dependencies = [
    'dash >= 2.11',  # Dash 2.11 introduces a breaking change with Jupyter notebook support
    'jaconv',
    'Jinja2',
    'nlpaug',
    'nltk >= 3.9',
    'openai >= 1, < 1.47',
    'pandas >= 1',
    'plotly >= 5',
    'rouge-score >= 0.1.2',
    'sentence-transformers >= 2',
    'sentencepiece>=0.1.95',
    'tomli; python_version < "3.11"',
    'tokenizers >= 0.13.2; python_version >= "3.11"',  # See https://github.com/citadel-ai/langcheck/pull/45
    'torch >= 2',
    'transformers >= 4.6',
    'tabulate >= 0.9.0', # For model manager print table
    'omegaconf >= 2.3.0' # For model manager print table
]
requires-python = ">=3.8"

[project.optional-dependencies]
de = []  # No extra dependencies needed for German
en = []  # English support is installed by default
ja = [
    'chikkarpy',
    'fugashi',  # For tokenizer of metrics.ja.toxicity()
    'janome >= 0.3.1',
    'unidic-lite >= 1.0.1'  # For tokenizer of metrics.ja.toxicity()
]
ja-optional = [  # Optional dependencies for extended Japanese support
    'mecab-python3 >= 1.0.4',
    'sudachidict-core',
    'sudachipy'
]
zh = [
    'hanlp >= 2.1.0b33'
]

# Different LLM clients
anthropic = [
    'anthropic'
]
gemini = [
    'google-generativeai'
]
local-llm = [
    'vllm'
]

all = [
    'langcheck[de]',
    'langcheck[en]',
    'langcheck[ja]',
    'langcheck[ja-optional]',
    'langcheck[zh]',
    'langcheck[anthropic]',
    'langcheck[gemini]',
    'langcheck[local-llm]'
]

no-local-llm = [
    'langcheck[de]',
    'langcheck[en]',
    'langcheck[ja]',
    'langcheck[ja-optional]',
    'langcheck[zh]',
    'langcheck[anthropic]',
    'langcheck[gemini]',
]

dev = [
    "ruff >= 0.6",
    "pyright",
    "pandas-stubs",
    "pytest",
    "sphinx",
    "sphinx-book-theme",
    "myst-parser",
    "ipykernel",
    "sphinxcontrib-youtube"
]

[project.urls]
repository    = "https://github.com/citadel-ai/langcheck"

[tool.ruff]
lint.select = ["E4", "E7", "E9", "F", "I", "Q"]
line-length=80
exclude = [
    "build", "venv"
]

[tool.pyright]
autoSearchPaths=false
extraPaths=[] # Include paths from PYTHONPATH env var and .env definition
useLibraryCodeForTypes=true
typeCheckingMode="basic"
ignore = [
    "build", "venv"
]

[tool.pytest.ini_options]
markers = [
    "optional: marks tests as optional",
]
disable_test_id_escaping_and_forfeit_all_rights_to_community_support = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
langcheck = ["metrics/model_manager/config/*.yaml", "metrics/prompts/**/*.j2"]
